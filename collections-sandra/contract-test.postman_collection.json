{
	"info": {
		"_postman_id": "c728ac2b-f855-4ea1-a7a0-cda32f9e31f7",
		"name": "contract-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5486302"
	},
	"item": [
		{
			"name": "listar-usuarios",
			"item": [
				{
					"name": "Listar usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Validação da estrutura de resposta - Listagem de Usuários\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData).to.have.property(\"quantidade\").that.is.a(\"number\");",
									"    pm.expect(jsonData).to.have.property(\"usuarios\").that.is.an(\"array\");",
									"    ",
									"    jsonData.usuarios.forEach(function(usuario) {",
									"        pm.expect(usuario).to.be.an(\"object\");",
									"        pm.expect(usuario).to.have.property(\"nome\").that.is.a(\"string\");",
									"        pm.expect(usuario.administrador).to.satisfy(val => val === \"true\" || val === \"false\");",
									"        pm.expect(usuario).to.have.property(\"email\").that.is.a(\"string\");",
									"        pm.expect(usuario).to.have.property(\"password\").that.is.a(\"string\");",
									"        pm.expect(usuario).to.have.property(\"_id\").that.is.a(\"string\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "listar-produtos",
			"item": [
				{
					"name": "Listar Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validação da estrutura de resposta - Listagem de Produtos\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData).to.have.property(\"quantidade\").that.is.a(\"number\");\r",
									"    pm.expect(jsonData).to.have.property(\"produtos\").that.is.an(\"array\");\r",
									"    \r",
									"    jsonData.produtos.forEach(function(produto) {\r",
									"        pm.expect(produto).to.be.an(\"object\");\r",
									"        pm.expect(produto).to.have.property(\"nome\").that.is.a(\"string\");\r",
									"        pm.expect(produto).to.have.property(\"preco\").that.is.a(\"number\");\r",
									"        pm.expect(produto).to.have.property(\"descricao\").that.is.a(\"string\");\r",
									"        pm.expect(produto).to.have.property(\"quantidade\").that.is.a(\"number\");\r",
									"        pm.expect(produto).to.have.property(\"_id\").that.is.a(\"string\");\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "cadastrar-produto",
			"item": [
				{
					"name": "Realizar login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\");\r",
									"});\r",
									"\r",
									"const resposta = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", resposta.authorization);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"sandrapavan@pucminas.br\",\n  \"password\": \"pucminas\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "A duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized).\n"
					},
					"response": []
				},
				{
					"name": "Cadastrar produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"const resposta = pm.response.json();\r",
									"pm.collectionVariables.set(\"idProduto\", resposta._id);\r",
									"\r",
									"pm.test(\"Validação da estrutura de resposta - Criação de Produto\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
									"    pm.expect(jsonData).to.have.property(\"_id\").that.is.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Iphone 17\",\r\n  \"preco\": 12000,\r\n  \"descricao\": \"Celular\",\r\n  \"quantidade\": 381\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "idProduto",
			"value": ""
		},
		{
			"key": "qtdProduto",
			"value": ""
		}
	]
}